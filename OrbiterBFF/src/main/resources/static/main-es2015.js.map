{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/celestial-orbit/celestial-orbit.component.ts","./src/app/celestial-orbit/celestial-orbit.component.html","./src/app/directives/AnimationDirective.directive.ts","./src/app/directives/PlanetDirective.directive.ts","./src/app/services/planet.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { NgForm, Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { PlanetService } from './services/planet.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  title = 'Orbiter';\n  animatePlanet = true;\n  orbitalSpeed = 1;\n  rotationalSpeed = 1;\n  isExpanded = true;\n  isShowing = false;\n  showSubmenu: boolean = false;\n  planet: any = {};\n  orbitForm: FormGroup;\n  submitted = false;\n  constructor(private planetService: PlanetService, private fb: FormBuilder) { }\n\n  ngOnInit(){\n    this.getRandomPlanet();\n    this.orbitForm = this.fb.group({\n      orbitalSpeed: ['', Validators.min(0)],\n      rotationalSpeed: ['', Validators.min(0)],\n    },{});\n  }\n\n  getRandomPlanet(){\n    this.planetService.getPlanet().subscribe(res => {\n      this.planet = res;\n    });\n  }\n\n  mouseenter() {\n    if (!this.isExpanded) {\n      this.isShowing = true;\n    }\n  }\n\n  mouseleave() {\n    if (!this.isExpanded) {\n      this.isShowing = false;\n    }\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if(this.orbitForm.valid){\n      this.orbitalSpeed = this.orbitForm.value.orbitalSpeed;\n      this.rotationalSpeed = this.orbitForm.value.rotationalSpeed;\n    }\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"toolbar\">\r\n  <button mat-icon-button (click)=\"isExpanded = !isExpanded\"><mat-icon>menu</mat-icon></button>\r\n  <h1>Indiggo</h1>\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container class=\"example-container\" autosize>\r\n  <mat-sidenav #sidenav class=\"example-sidenav\" mode=\"side\" opened=\"true\" (mouseenter)=\"mouseenter()\" (mouseleave)=\"mouseleave()\">\r\n    <mat-nav-list>\r\n      <mat-list-item (click)=\"animatePlanet = !animatePlanet\" class=\"parent\">\r\n        <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Start/Stop Orbit</span>\r\n        <mat-icon mat-list-icon *ngIf=\"!animatePlanet\">play_arrow</mat-icon>\r\n        <mat-icon mat-list-icon *ngIf=\"animatePlanet\">pause</mat-icon>\r\n      </mat-list-item>\r\n      <mat-list-item (click)=\"getRandomPlanet()\" class=\"parent\">\r\n        <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Get new planet</span>\r\n        <mat-icon mat-list-icon>find_replace</mat-icon>\r\n      </mat-list-item>\r\n      <mat-list-item (click)=\"showSubmenu = !showSubmenu\" class=\"parent\">\r\n        <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Change Orbital Parameters</span>\r\n        <mat-icon mat-list-icon>settings</mat-icon>\r\n        <mat-icon class=\"menu-button\" [ngClass]=\"{'rotated' : showSubmenu}\" *ngIf=\"isExpanded || isShowing\">expand_more</mat-icon>\r\n      </mat-list-item>\r\n      <div class=\"submenu\" [ngClass]=\"{'expanded' : showSubmenu}\" *ngIf=\"isShowing || isExpanded\">\r\n        <form class=\"form\" [formGroup]=\"orbitForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label>Orbital Period</label>\r\n            <input type=\"number\" name=\"orbitalSpeed\" class=\"form-control\" min=\"0\" formControlName=\"orbitalSpeed\" >\r\n            <span class=\"text-danger\" *ngIf=\"(orbitForm.controls.orbitalSpeed.touched || submitted) && orbitForm.controls.orbitalSpeed.errors?.min\">\r\n              Must be positive\r\n            </span>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Rotational Period</label>\r\n            <input type=\"number\" name=\"rotationalSpeed\" class=\"form-control\" min=\"0\" formControlName=\"rotationalSpeed\">\r\n            <span class=\"text-danger\" *ngIf=\"(orbitForm.controls.rotationalSpeed.touched || submitted) && orbitForm.controls.rotationalSpeed.errors?.min\">\r\n              Must be positive\r\n            </span>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"submit\" name=\"Apply\">\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <app-celestial-orbit [orbitalSpeed]=\"orbitalSpeed\" [rotationalSpeed]=\"rotationalSpeed\" [animatePlanet]=\"animatePlanet\" [planet]=\"planet\"></app-celestial-orbit>\r\n</mat-sidenav-container>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PlanetDirective } from './directives/PlanetDirective.directive';\nimport { PlanetAnimationDirective } from './directives/AnimationDirective.directive';\nimport { CelestialOrbitComponent } from './celestial-orbit/celestial-orbit.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlanetDirective,\n    PlanetAnimationDirective,\n    CelestialOrbitComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatButtonModule,\n    MatIconModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport { PlanetService } from '../services/planet.service';\n\n@Component({\n  selector: 'app-celestial-orbit',\n  templateUrl: './celestial-orbit.component.html',\n  styleUrls: ['./celestial-orbit.component.css']\n})\nexport class CelestialOrbitComponent {\n  @Input() animatePlanet;\n  @Input() orbitalSpeed;\n  @Input() rotationalSpeed;\n  @Input() planet;\n  constructor() { }\n\n}\n","<mat-sidenav-content class=\"celestialOrbitSideContent\">\n  <h1>{{planet.name}}</h1>\n  <div class=\"sun\"></div>\n  <div planetAnimation [animate]=\"animatePlanet\" [orbitSpeed]=\"orbitalSpeed+'s'\">\n    <div planet [planetColor]=\"planet.color\" [planetRadius]=\"planet.radius+'px'\"\n                [rotationSpeed]=\"rotationalSpeed\" class=\"orbiter\">\n    </div>\n  </div>\n\n</mat-sidenav-content>\n","import { Directive, ElementRef, Input, OnInit, Renderer2, SimpleChange } from '@angular/core';\r\n\r\n@Directive({\r\nselector:'[planetAnimation]'\r\n})\r\n\r\n  export class PlanetAnimationDirective implements OnInit{\r\n\r\n  @Input('animate') shouldAnimate: boolean;\r\n  @Input('orbitSpeed') orbitSpeed: number;\r\n  @Input('rotationSpeed') rotationalSpeed: number;\r\n\r\nconstructor(private er: ElementRef, private renderer: Renderer2){\r\n    renderer.setStyle(er.nativeElement,'width','400px');\r\n    renderer.setStyle(er.nativeElement,'height','400px');\r\n    renderer.setStyle(er.nativeElement,'top','172px');\r\n    renderer.setStyle(er.nativeElement,'left','140px');\r\n    renderer.setStyle(er.nativeElement,'border-radius','50%');\r\n    renderer.setStyle(er.nativeElement,'-webkit-animation-iteration-count','infinite');\r\n    renderer.setStyle(er.nativeElement,'-webkit-animation-timing-function','linear');\r\n    renderer.setStyle(er.nativeElement,'-webkit-animation-name','orbit');\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.updateAnimation();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateAnimation();\r\n  }\r\n\r\n  updateAnimation(){\r\n    let orbitSpeed = `${this.orbitSpeed}`;\r\n    console.log(this.shouldAnimate);\r\n    if(this.shouldAnimate){\r\n      console.log(\"SET ORBIT SPEED TO ORBIT SPEED\");\r\n      this.renderer.setStyle(this.er.nativeElement,'-webkit-animation-duration',orbitSpeed);\r\n    } else{\r\n      console.log(\"SET ORBIT SPEED TO 0\");\r\n      this.renderer.setStyle(this.er.nativeElement,'-webkit-animation-duration','0s');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef, Input, OnInit, Renderer2, SimpleChange } from '@angular/core';\r\n\r\n@Directive({\r\n  selector:'[planet]'\r\n})\r\n\r\n  export class PlanetDirective implements OnInit{\r\n\r\n    @Input('planetColor') planetColor: string;\r\n    @Input('planetRadius') planetRadius: string;\r\n    @Input('rotationSpeed') rotationSpeed: string;\r\n\r\n    constructor(private er: ElementRef, private renderer: Renderer2){\r\n      renderer.setStyle(er.nativeElement,'-webkit-animation-iteration-count','infinite');\r\n      renderer.setStyle(er.nativeElement,'-webkit-animation-timing-function','linear');\r\n      renderer.setStyle(er.nativeElement,'-webkit-animation-name','rotate-planet');\r\n      renderer.setStyle(er.nativeElement,'border','5px solid rgba(29,161,242,0.2)');\r\n      renderer.setStyle(er.nativeElement,'border-left-color', 'rgb(29,161,242)');\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.updateView();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateView();\r\n  }\r\n\r\n  updateView() {\r\n    let planetColor = `${this.planetColor}`;\r\n    this.renderer.setStyle(this.er.nativeElement,'background-color', planetColor);\r\n\r\n    let planetRadius = `${this.planetRadius}`;\r\n    this.renderer.setStyle(this.er.nativeElement,'height', planetRadius);\r\n    this.renderer.setStyle(this.er.nativeElement,'width', planetRadius);\r\n    this.renderer.setStyle(this.er.nativeElement,'border-radius', '50%');\r\n\r\n    let rotationalSpeed = `${this.rotationSpeed}s`;\r\n    this.renderer.setStyle(this.er.nativeElement,'-webkit-animation-duration',rotationalSpeed);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanetService {\n\n  uri = 'http://localhost:8080/planet';\n\n  constructor(private http: HttpClient) { }\n\n  public getPlanet(){\n    return this.http.get(`${this.uri}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}