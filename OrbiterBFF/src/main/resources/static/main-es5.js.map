{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/celestial-orbit/celestial-orbit.component.ts","webpack:///src/app/celestial-orbit/celestial-orbit.component.html","webpack:///src/app/directives/AnimationDirective.directive.ts","webpack:///src/app/directives/PlanetDirective.directive.ts","webpack:///src/app/services/planet.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","planetService","fb","title","animatePlanet","orbitalSpeed","rotationalSpeed","isExpanded","isShowing","showSubmenu","planet","submitted","getRandomPlanet","orbitForm","group","min","getPlanet","subscribe","res","valid","value","mouseenter","mouseleave","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CelestialOrbitComponent","PlanetAnimationDirective","er","renderer","setStyle","nativeElement","updateAnimation","orbitSpeed","console","log","shouldAnimate","PlanetDirective","updateView","planetColor","planetRadius","rotationSpeed","PlanetService","http","uri","get","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { NgForm, Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { PlanetService } from './services/planet.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  title = 'Orbiter';\n  animatePlanet = true;\n  orbitalSpeed = 1;\n  rotationalSpeed = 1;\n  isExpanded = true;\n  isShowing = false;\n  showSubmenu: boolean = false;\n  planet: any = {};\n  orbitForm: FormGroup;\n  submitted = false;\n  constructor(private planetService: PlanetService, private fb: FormBuilder) { }\n\n  ngOnInit(){\n    this.getRandomPlanet();\n    this.orbitForm = this.fb.group({\n      orbitalSpeed: ['', Validators.min(0)],\n      rotationalSpeed: ['', Validators.min(0)],\n    },{});\n  }\n\n  getRandomPlanet(){\n    this.planetService.getPlanet().subscribe(res => {\n      this.planet = res;\n    });\n  }\n\n  mouseenter() {\n    if (!this.isExpanded) {\n      this.isShowing = true;\n    }\n  }\n\n  mouseleave() {\n    if (!this.isExpanded) {\n      this.isShowing = false;\n    }\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if(this.orbitForm.valid){\n      this.orbitalSpeed = this.orbitForm.value.orbitalSpeed;\n      this.rotationalSpeed = this.orbitForm.value.rotationalSpeed;\n    }\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"toolbar\">\r\n  <button mat-icon-button (click)=\"isExpanded = !isExpanded\"><mat-icon>menu</mat-icon></button>\r\n  <h1>Indiggo</h1>\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container class=\"example-container\" autosize>\r\n  <mat-sidenav #sidenav class=\"example-sidenav\" mode=\"side\" opened=\"true\" (mouseenter)=\"mouseenter()\" (mouseleave)=\"mouseleave()\">\r\n    <mat-nav-list>\r\n      <mat-list-item (click)=\"animatePlanet = !animatePlanet\" class=\"parent\">\r\n        <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Start/Stop Orbit</span>\r\n        <mat-icon mat-list-icon *ngIf=\"!animatePlanet\">play_arrow</mat-icon>\r\n        <mat-icon mat-list-icon *ngIf=\"animatePlanet\">pause</mat-icon>\r\n      </mat-list-item>\r\n      <mat-list-item (click)=\"getRandomPlanet()\" class=\"parent\">\r\n        <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Get new planet</span>\r\n        <mat-icon mat-list-icon>find_replace</mat-icon>\r\n      </mat-list-item>\r\n      <mat-list-item (click)=\"showSubmenu = !showSubmenu\" class=\"parent\">\r\n        <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Change Orbital Parameters</span>\r\n        <mat-icon mat-list-icon>settings</mat-icon>\r\n        <mat-icon class=\"menu-button\" [ngClass]=\"{'rotated' : showSubmenu}\" *ngIf=\"isExpanded || isShowing\">expand_more</mat-icon>\r\n      </mat-list-item>\r\n      <div class=\"submenu\" [ngClass]=\"{'expanded' : showSubmenu}\" *ngIf=\"isShowing || isExpanded\">\r\n        <form class=\"form\" [formGroup]=\"orbitForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label>Orbital Period</label>\r\n            <input type=\"number\" name=\"orbitalSpeed\" class=\"form-control\" min=\"0\" formControlName=\"orbitalSpeed\" >\r\n            <span class=\"text-danger\" *ngIf=\"(orbitForm.controls.orbitalSpeed.touched || submitted) && orbitForm.controls.orbitalSpeed.errors?.min\">\r\n              Must be positive\r\n            </span>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Rotational Period</label>\r\n            <input type=\"number\" name=\"rotationalSpeed\" class=\"form-control\" min=\"0\" formControlName=\"rotationalSpeed\">\r\n            <span class=\"text-danger\" *ngIf=\"(orbitForm.controls.rotationalSpeed.touched || submitted) && orbitForm.controls.rotationalSpeed.errors?.min\">\r\n              Must be positive\r\n            </span>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"submit\" name=\"Apply\">\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <app-celestial-orbit [orbitalSpeed]=\"orbitalSpeed\" [rotationalSpeed]=\"rotationalSpeed\" [animatePlanet]=\"animatePlanet\" [planet]=\"planet\"></app-celestial-orbit>\r\n</mat-sidenav-container>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PlanetDirective } from './directives/PlanetDirective.directive';\nimport { PlanetAnimationDirective } from './directives/AnimationDirective.directive';\nimport { CelestialOrbitComponent } from './celestial-orbit/celestial-orbit.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlanetDirective,\n    PlanetAnimationDirective,\n    CelestialOrbitComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatButtonModule,\n    MatIconModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport { PlanetService } from '../services/planet.service';\n\n@Component({\n  selector: 'app-celestial-orbit',\n  templateUrl: './celestial-orbit.component.html',\n  styleUrls: ['./celestial-orbit.component.css']\n})\nexport class CelestialOrbitComponent {\n  @Input() animatePlanet;\n  @Input() orbitalSpeed;\n  @Input() rotationalSpeed;\n  @Input() planet;\n  constructor() { }\n\n}\n","<mat-sidenav-content class=\"celestialOrbitSideContent\">\n  <h1>{{planet.name}}</h1>\n  <div class=\"sun\"></div>\n  <div planetAnimation [animate]=\"animatePlanet\" [orbitSpeed]=\"orbitalSpeed+'s'\">\n    <div planet [planetColor]=\"planet.color\" [planetRadius]=\"planet.radius+'px'\"\n                [rotationSpeed]=\"rotationalSpeed\" class=\"orbiter\">\n    </div>\n  </div>\n\n</mat-sidenav-content>\n","import { Directive, ElementRef, Input, OnInit, Renderer2, SimpleChange } from '@angular/core';\r\n\r\n@Directive({\r\nselector:'[planetAnimation]'\r\n})\r\n\r\n  export class PlanetAnimationDirective implements OnInit{\r\n\r\n  @Input('animate') shouldAnimate: boolean;\r\n  @Input('orbitSpeed') orbitSpeed: number;\r\n  @Input('rotationSpeed') rotationalSpeed: number;\r\n\r\nconstructor(private er: ElementRef, private renderer: Renderer2){\r\n    renderer.setStyle(er.nativeElement,'width','400px');\r\n    renderer.setStyle(er.nativeElement,'height','400px');\r\n    renderer.setStyle(er.nativeElement,'top','172px');\r\n    renderer.setStyle(er.nativeElement,'left','140px');\r\n    renderer.setStyle(er.nativeElement,'border-radius','50%');\r\n    renderer.setStyle(er.nativeElement,'-webkit-animation-iteration-count','infinite');\r\n    renderer.setStyle(er.nativeElement,'-webkit-animation-timing-function','linear');\r\n    renderer.setStyle(er.nativeElement,'-webkit-animation-name','orbit');\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.updateAnimation();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateAnimation();\r\n  }\r\n\r\n  updateAnimation(){\r\n    let orbitSpeed = `${this.orbitSpeed}`;\r\n    console.log(this.shouldAnimate);\r\n    if(this.shouldAnimate){\r\n      console.log(\"SET ORBIT SPEED TO ORBIT SPEED\");\r\n      this.renderer.setStyle(this.er.nativeElement,'-webkit-animation-duration',orbitSpeed);\r\n    } else{\r\n      console.log(\"SET ORBIT SPEED TO 0\");\r\n      this.renderer.setStyle(this.er.nativeElement,'-webkit-animation-duration','0s');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef, Input, OnInit, Renderer2, SimpleChange } from '@angular/core';\r\n\r\n@Directive({\r\n  selector:'[planet]'\r\n})\r\n\r\n  export class PlanetDirective implements OnInit{\r\n\r\n    @Input('planetColor') planetColor: string;\r\n    @Input('planetRadius') planetRadius: string;\r\n    @Input('rotationSpeed') rotationSpeed: string;\r\n\r\n    constructor(private er: ElementRef, private renderer: Renderer2){\r\n      renderer.setStyle(er.nativeElement,'-webkit-animation-iteration-count','infinite');\r\n      renderer.setStyle(er.nativeElement,'-webkit-animation-timing-function','linear');\r\n      renderer.setStyle(er.nativeElement,'-webkit-animation-name','rotate-planet');\r\n      renderer.setStyle(er.nativeElement,'border','5px solid rgba(29,161,242,0.2)');\r\n      renderer.setStyle(er.nativeElement,'border-left-color', 'rgb(29,161,242)');\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.updateView();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateView();\r\n  }\r\n\r\n  updateView() {\r\n    let planetColor = `${this.planetColor}`;\r\n    this.renderer.setStyle(this.er.nativeElement,'background-color', planetColor);\r\n\r\n    let planetRadius = `${this.planetRadius}`;\r\n    this.renderer.setStyle(this.er.nativeElement,'height', planetRadius);\r\n    this.renderer.setStyle(this.er.nativeElement,'width', planetRadius);\r\n    this.renderer.setStyle(this.er.nativeElement,'border-radius', '50%');\r\n\r\n    let rotationalSpeed = `${this.rotationSpeed}s`;\r\n    this.renderer.setStyle(this.er.nativeElement,'-webkit-animation-duration',rotationalSpeed);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanetService {\n\n  uri = 'http://localhost:8080/planet';\n\n  constructor(private http: HttpClient) { }\n\n  public getPlanet(){\n    return this.http.get(`${this.uri}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}